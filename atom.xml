<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>平凡之路</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.helongfei.com/"/>
  <updated>2017-12-29T16:48:41.499Z</updated>
  <id>http://www.helongfei.com/</id>
  
  <author>
    <name>贺龙飞</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Laravel自定义用户权限校验</title>
    <link href="http://www.helongfei.com/2017/laravel%E8%87%AA%E5%AE%9A%E4%B9%89%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E6%A0%A1%E9%AA%8C/"/>
    <id>http://www.helongfei.com/2017/laravel自定义用户权限校验/</id>
    <published>2017-12-29T16:05:00.000Z</published>
    <updated>2017-12-29T16:48:41.499Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>在现实的架构中，帐号体系往往会单独维护，应用需要鉴权的时候会请求用户中心接口，而<code>laravel</code>使用<code>auth</code>中间件时默认采用的是<code>session</code>进行鉴权，不能满足我们的需求，所以需要自定义权限校验。</p><h1 id="Auth-中间件的工作原理"><a href="#Auth-中间件的工作原理" class="headerlink" title="Auth 中间件的工作原理"></a><code>Auth</code> 中间件的工作原理</h1><a id="more"></a><p>首先，在 <code>app/Http/Kernel.php</code> 中，发现 :<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> $routeMiddleware = [</span><br><span class="line">       <span class="string">'auth'</span> =&gt; \Illuminate\Auth\Middleware\Authenticate::class,</span><br><span class="line">       <span class="string">'auth.basic'</span> =&gt; \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,</span><br><span class="line">       ...</span><br><span class="line">   ];</span><br></pre></td></tr></table></figure></p><p>然后，跟踪到 <code>vendor/laravel/framework/src/Illuminate/Auth/AuthManager.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">guard</span><span class="params">($name = null)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   $name = $name ?: <span class="keyword">$this</span>-&gt;getDefaultDriver();</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;guards[$name])</span><br><span class="line">               ? <span class="keyword">$this</span>-&gt;guards[$name]</span><br><span class="line">               : <span class="keyword">$this</span>-&gt;guards[$name] = <span class="keyword">$this</span>-&gt;resolve($name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getDefaultDriver</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">// 注意这行</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;app[<span class="string">'config'</span>][<span class="string">'auth.defaults.guard'</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，查看 <code>config/auth.php</code> :<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="string">'defaults'</span> =&gt; [</span><br><span class="line">       <span class="string">'guard'</span> =&gt; <span class="string">'web'</span>, <span class="comment">// 注意这行</span></span><br><span class="line">       <span class="string">'passwords'</span> =&gt; <span class="string">'users'</span>,</span><br><span class="line">   ],</span><br><span class="line">...</span><br><span class="line"><span class="string">'guards'</span> =&gt; [</span><br><span class="line">       <span class="string">'web'</span> =&gt; [</span><br><span class="line">           <span class="string">'driver'</span> =&gt; <span class="string">'session'</span>,</span><br><span class="line">           <span class="string">'provider'</span> =&gt; <span class="string">'users'</span>,</span><br><span class="line">       ],</span><br><span class="line">       ...</span><br><span class="line">   ],</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>由此可见，默认使用的<code>guard</code>是<code>web</code>，驱动是<code>session</code>；到此已经很明确了，我们需要做的只是新建一个<code>guard</code>。</p><p>具体如何创建<code>guard</code>？<br>见官方文档：<a href="https://laravel.com/docs/5.5/authentication#adding-custom-guards" rel="external nofollow noopener noreferrer" target="_blank">https://laravel.com/docs/5.5/authentication#adding-custom-guards</a></p><h1 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h1><ul><li>创建 <code>guard</code></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Auth</span>\<span class="title">GuardHelpers</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Contracts</span>\<span class="title">Auth</span>\<span class="title">Guard</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KohanaGuard</span> <span class="keyword">implements</span> <span class="title">Guard</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">use</span> <span class="title">GuardHelpers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> $request;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(Request $request)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;request = $request;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the currently authenticated user.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> \Illuminate\Contracts\Auth\Authenticatable|null</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> \Exception</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">          <span class="comment">// 校验规则</span></span><br><span class="line">          <span class="comment">// 成功返回 User Model 对象</span></span><br><span class="line">          <span class="comment">// 失败返回 null</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Validate a user's credentials.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  array $credentials</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">validate</span><span class="params">(array $credentials = [])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Implement validate() method.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>添加到 <code>app/Providers/AuthServiceProvider.php</code>:</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">$this</span>-&gt;registerPolicies();</span><br><span class="line"></span><br><span class="line">   <span class="comment">//注册 kohana 的 guard</span></span><br><span class="line">   \Auth::extend(<span class="string">'kohana'</span>, <span class="function"><span class="keyword">function</span> <span class="params">($app, $name, array $config)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> KohanaGuard($app[<span class="string">'request'</span>]);</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改 <code>config/auth.php</code><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="string">'defaults'</span> =&gt; [</span><br><span class="line">    <span class="string">'guard'</span> =&gt; <span class="string">'kohana'</span>, <span class="comment">// 注意这行</span></span><br><span class="line">    <span class="string">'passwords'</span> =&gt; <span class="string">'users'</span>,</span><br><span class="line">],</span><br><span class="line">...</span><br><span class="line"><span class="string">'guards'</span> =&gt; [</span><br><span class="line">   ...</span><br><span class="line">   <span class="comment">// 以下为新增</span></span><br><span class="line">   <span class="string">'kohana'</span> =&gt; [</span><br><span class="line">     <span class="string">'driver'</span> =&gt; <span class="string">'kohana'</span>,</span><br><span class="line">     <span class="string">'provider'</span> =&gt; <span class="string">'users'</span>,</span><br><span class="line">   ],</span><br><span class="line">],</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;在现实的架构中，帐号体系往往会单独维护，应用需要鉴权的时候会请求用户中心接口，而&lt;code&gt;laravel&lt;/code&gt;使用&lt;code&gt;auth&lt;/code&gt;中间件时默认采用的是&lt;code&gt;session&lt;/code&gt;进行鉴权，不能满足我们的需求，所以需要自定义权限校验。&lt;/p&gt;
&lt;h1 id=&quot;Auth-中间件的工作原理&quot;&gt;&lt;a href=&quot;#Auth-中间件的工作原理&quot; class=&quot;headerlink&quot; title=&quot;Auth 中间件的工作原理&quot;&gt;&lt;/a&gt;&lt;code&gt;Auth&lt;/code&gt; 中间件的工作原理&lt;/h1&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.helongfei.com/categories/PHP/"/>
    
    
      <category term="php" scheme="http://www.helongfei.com/tags/php/"/>
    
      <category term="laravel" scheme="http://www.helongfei.com/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>CI 框架总结</title>
    <link href="http://www.helongfei.com/2016/cikuang-jia-zong-jie/"/>
    <id>http://www.helongfei.com/2016/cikuang-jia-zong-jie/</id>
    <published>2016-03-26T19:09:54.000Z</published>
    <updated>2017-11-11T07:52:27.045Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote><p>本文主要是参考2.2.6的源码</p></blockquote><h1 id="设计思想"><a href="#设计思想" class="headerlink" title="设计思想"></a>设计思想</h1><p>使用 &amp;get_instance(); 可以引用所有已加载的类。<br><a id="more"></a></p><h1 id="中文手册"><a href="#中文手册" class="headerlink" title="中文手册"></a>中文手册</h1><p><a href="http://codeigniter.org.cn/userguide2/index.html" target="_blank" rel="external">http://codeigniter.org.cn/userguide2/index.html</a>  </p><h1 id="框架运行图解"><a href="#框架运行图解" class="headerlink" title="框架运行图解"></a>框架运行图解</h1><h2 id="运行流程图"><a href="#运行流程图" class="headerlink" title="运行流程图"></a>运行流程图</h2><img src="/images/2016/0327/CI.png" class="center"><h2 id="运行生命周期"><a href="#运行生命周期" class="headerlink" title="运行生命周期"></a>运行生命周期</h2><img src="/images/2016/0327/CI2.png" class="center"><h1 id="开发注意事项"><a href="#开发注意事项" class="headerlink" title="开发注意事项"></a>开发注意事项</h1><h2 id="Controller-中"><a href="#Controller-中" class="headerlink" title="Controller 中"></a>Controller 中</h2><ul><li><code>_remap</code> 方法（接管路由）</li><li><code>_output</code> 方法（接管输出）</li><li><code>_</code>前缀的方法名都会被路由屏蔽</li></ul><h1 id="如何扩展框架？"><a href="#如何扩展框架？" class="headerlink" title="如何扩展框架？"></a>如何扩展框架？</h1><h2 id="扩展-替换-core-类"><a href="#扩展-替换-core-类" class="headerlink" title="扩展/替换 core 类"></a>扩展/替换 core 类</h2><blockquote><p>此类都是在系统使用的核心类，常用的是扩展控制器类</p></blockquote><p>在 application/core 下新建文件</p><ul><li><p>扩展</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MY_controller</span> <span class="keyword">extends</span> <span class="title">CI_controller</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure></li><li><p>替换</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CI_controller</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="使用-新建-替换-扩展类库"><a href="#使用-新建-替换-扩展类库" class="headerlink" title="使用/新建/替换/扩展类库"></a>使用/新建/替换/扩展类库</h2><ol><li><p>使用内置</p> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;load-&gt;library(<span class="string">'name'</span>);</span><br></pre></td></tr></table></figure></li><li><p>建立新的类<br> 在 applicatioin/libraries 目录下</p></li><li><p>扩展已有类<br> 在 applicatioin/libraries 目录下，使用定义好的子类前缀，并继承父类<br> 比如扩展 email：  </p> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MY_Email</span> <span class="keyword">extends</span> <span class="title">CI_Email</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure></li><li>替换已有类<br> 在 applicatioin/libraries 目录下，声明和默认的类名一样的类</li></ol><h2 id="使用-新建适配器"><a href="#使用-新建适配器" class="headerlink" title="使用/新建适配器"></a>使用/新建适配器</h2><ul><li>内置</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;load-&gt;driver(<span class="string">'some_parent'</span>);</span><br><span class="line"><span class="keyword">$this</span>-&gt;some_parent-&gt;some_method();</span><br><span class="line"><span class="keyword">$this</span>-&gt;some_parent-&gt;child_one-&gt;some_method();</span><br></pre></td></tr></table></figure><ul><li>自定义</li></ul><p>目录结构：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/application/libraries/Driver_name</span><br><span class="line">  Driver_name.php</span><br><span class="line">  drivers</span><br><span class="line">  Driver_name_subclass_1.php</span><br><span class="line">  Driver_name_subclass_2.php</span><br><span class="line">  Driver_name_subclass_3.php</span><br></pre></td></tr></table></figure><h2 id="集成自己的独立应用"><a href="#集成自己的独立应用" class="headerlink" title="集成自己的独立应用"></a>集成自己的独立应用</h2><p>目录结构：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/application/third_party/foo_bar</span><br><span class="line">config/</span><br><span class="line">helpers/</span><br><span class="line">language/</span><br><span class="line">libraries/</span><br><span class="line">models/</span><br></pre></td></tr></table></figure><p>使用方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;load-&gt;add_package_path(APPPATH.<span class="string">'third_party/foo_bar/'</span>);</span><br><span class="line"><span class="keyword">$this</span>-&gt;load-&gt;library(<span class="string">'foo_bar'</span>);</span><br><span class="line">...</span><br><span class="line"><span class="keyword">$this</span>-&gt;load-&gt;remove_package_path(APPPATH.<span class="string">'third_party/foo_bar/'</span>);</span><br></pre></td></tr></table></figure><h1 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h1><ol><li>默认保存 SQL；cli 模式下会内存溢出;修复方式如下：</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在配置文件中增加：</span><br><span class="line">$db[<span class="string">'default'</span>][<span class="string">'save_queries'</span>] = <span class="keyword">false</span>;</span><br><span class="line">或者在代码里增加:</span><br><span class="line"><span class="keyword">$this</span>-&gt;load-&gt;database();</span><br><span class="line"><span class="keyword">$this</span>-&gt;db-&gt;save_queries = <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文主要是参考2.2.6的源码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;设计思想&quot;&gt;&lt;a href=&quot;#设计思想&quot; class=&quot;headerlink&quot; title=&quot;设计思想&quot;&gt;&lt;/a&gt;设计思想&lt;/h1&gt;&lt;p&gt;使用 &amp;amp;get_instance(); 可以引用所有已加载的类。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://www.helongfei.com/categories/PHP/"/>
    
    
      <category term="php" scheme="http://www.helongfei.com/tags/php/"/>
    
      <category term="CI" scheme="http://www.helongfei.com/tags/CI/"/>
    
  </entry>
  
</feed>
