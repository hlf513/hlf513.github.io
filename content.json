{"pages":[{"title":"About","date":"2017-11-05T11:04:38.000Z","path":"about/index.html","text":""},{"title":"Categories","date":"2017-11-05T11:03:47.000Z","path":"categories/index.html","text":""},{"title":"Tags","date":"2017-11-05T11:02:00.000Z","path":"tags/index.html","text":""}],"posts":[{"title":"CI 框架总结","date":"2016-03-26T19:09:54.000Z","path":"2016/cikuang-jia-zong-jie/","text":"本文主要是参考2.2.6的源码 设计思想使用 &amp;get_instance(); 可以引用所有已加载的类。 中文手册http://codeigniter.org.cn/userguide2/index.html 框架运行图解运行流程图 运行生命周期 开发注意事项Controller 中 _remap 方法（接管路由） _output 方法（接管输出） _前缀的方法名都会被路由屏蔽 如何扩展框架？扩展/替换 core 类 此类都是在系统使用的核心类，常用的是扩展控制器类 在 application/core 下新建文件 扩展 1class MY_controller extends CI_controller&#123;&#125; 替换 1class CI_controller&#123;&#125; 使用/新建/替换/扩展类库 使用内置 1$this-&gt;load-&gt;library('name'); 建立新的类 在 applicatioin/libraries 目录下 扩展已有类 在 applicatioin/libraries 目录下，使用定义好的子类前缀，并继承父类 比如扩展 email： 1class MY_Email extends CI_Email&#123;&#125; 替换已有类 在 applicatioin/libraries 目录下，声明和默认的类名一样的类 使用/新建适配器 内置 123$this-&gt;load-&gt;driver('some_parent');$this-&gt;some_parent-&gt;some_method();$this-&gt;some_parent-&gt;child_one-&gt;some_method(); 自定义 目录结构： 123456/application/libraries/Driver_name Driver_name.php drivers Driver_name_subclass_1.php Driver_name_subclass_2.php Driver_name_subclass_3.php 集成自己的独立应用目录结构： 123456/application/third_party/foo_barconfig/helpers/language/libraries/models/ 使用方法： 1234$this-&gt;load-&gt;add_package_path(APPPATH.'third_party/foo_bar/');$this-&gt;load-&gt;library('foo_bar');...$this-&gt;load-&gt;remove_package_path(APPPATH.'third_party/foo_bar/'); 坑 默认保存 SQL；cli 模式下会内存溢出;修复方式如下： 12345在配置文件中增加：$db['default']['save_queries'] = false;或者在代码里增加:$this-&gt;load-&gt;database();$this-&gt;db-&gt;save_queries = false;","tags":[{"name":"php","slug":"php","permalink":"http://www.helongfei.com/tags/php/"},{"name":"CI","slug":"CI","permalink":"http://www.helongfei.com/tags/CI/"}],"categories":[{"name":"PHP","slug":"PHP","permalink":"http://www.helongfei.com/categories/PHP/"}]}]}