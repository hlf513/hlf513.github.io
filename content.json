{"meta":{"title":"贺龙飞的博客","subtitle":null,"description":"一些技术沉淀","author":"helongfei","url":"http://www.helongfei.com"},"pages":[{"title":"About","date":"2017-11-05T11:04:38.000Z","updated":"2017-11-05T12:44:05.210Z","comments":true,"path":"about/index.html","permalink":"http://www.helongfei.com/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2017-11-05T11:03:47.000Z","updated":"2017-11-05T12:44:05.210Z","comments":true,"path":"categories/index.html","permalink":"http://www.helongfei.com/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2017-11-05T11:02:00.000Z","updated":"2017-11-05T12:44:05.223Z","comments":true,"path":"tags/index.html","permalink":"http://www.helongfei.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"CI 框架总结","slug":"2016/cikuang-jia-zong-jie","date":"2016-03-26T19:09:54.000Z","updated":"2017-11-05T12:44:05.208Z","comments":true,"path":"2016/cikuang-jia-zong-jie/","link":"","permalink":"http://www.helongfei.com/2016/cikuang-jia-zong-jie/","excerpt":"","text":"本文主要是参考2.2.6的源码 设计思想使用 &amp;get_instance(); 可以引用所有已加载的类。 中文手册http://codeigniter.org.cn/userguide2/index.html 框架运行图解运行流程图 运行生命周期 开发注意事项Controller 中 _remap 方法（接管路由） _output 方法（接管输出） _前缀的方法名都会被路由屏蔽 如何扩展框架？扩展/替换 core 类 此类都是在系统使用的核心类，常用的是扩展控制器类 在 application/core 下新建文件 扩展 1class MY_controller extends CI_controller&#123;&#125; 替换 1class CI_controller&#123;&#125; 使用/新建/替换/扩展类库 使用内置 1$this-&gt;load-&gt;library('name'); 建立新的类 在 applicatioin/libraries 目录下 扩展已有类 在 applicatioin/libraries 目录下，使用定义好的子类前缀，并继承父类 比如扩展 email： 1class MY_Email extends CI_Email&#123;&#125; 替换已有类 在 applicatioin/libraries 目录下，声明和默认的类名一样的类 使用/新建适配器 内置 123$this-&gt;load-&gt;driver('some_parent');$this-&gt;some_parent-&gt;some_method();$this-&gt;some_parent-&gt;child_one-&gt;some_method(); 自定义 目录结构： 123456/application/libraries/Driver_name Driver_name.php drivers Driver_name_subclass_1.php Driver_name_subclass_2.php Driver_name_subclass_3.php 集成自己的独立应用目录结构： 123456/application/third_party/foo_barconfig/helpers/language/libraries/models/ 使用方法： 1234$this-&gt;load-&gt;add_package_path(APPPATH.'third_party/foo_bar/');$this-&gt;load-&gt;library('foo_bar');...$this-&gt;load-&gt;remove_package_path(APPPATH.'third_party/foo_bar/'); 坑 默认保存 SQL；cli 模式下会内存溢出;修复方式如下： 12345在配置文件中增加：$db['default']['save_queries'] = false;或者在代码里增加:$this-&gt;load-&gt;database();$this-&gt;db-&gt;save_queries = false;","categories":[],"tags":[{"name":"php","slug":"php","permalink":"http://www.helongfei.com/tags/php/"},{"name":"CI","slug":"CI","permalink":"http://www.helongfei.com/tags/CI/"}]},{"title":"Pandoc 生成 Html 幻灯片","slug":"2016/pandoc-sheng-cheng-html-huan-deng-pian","date":"2016-01-06T16:15:38.000Z","updated":"2017-11-05T12:44:05.209Z","comments":true,"path":"2016/pandoc-sheng-cheng-html-huan-deng-pian/","link":"","permalink":"http://www.helongfei.com/2016/pandoc-sheng-cheng-html-huan-deng-pian/","excerpt":"","text":"背景利用 markdown 直接生成 web-based slideshow；可以自定义 css ，足够灵活。 支持那些幻灯片框架？pandoc 包含5种 html 幻灯片框架： DZSlides Slidy S5 Slideous reveal.js 实际上可以使用任何幻灯片框架（比如Google I/O HTML5 slide template），只要让Pandoc在渲染HTML时使用你指定的模板即可. 生成默认模板的幻灯片pandoc 内置 dzslides 框架 1$ pandoc [*.md] -o [*.html] -t dzslides -s 可选配置渐进显示 生成幻灯片时加入 -i 选项，用于控制列表的显示效果（逐条渐入） 两段文字显示之间的人为停顿: ... 强制分割默认是2级标题分割。可以使用-----------------强制分割;也可以使用 --slide-level 选项覆盖默认的 Slide level 代码高亮风格控制代码高亮风格的选项有： –highlight-style pygments –highlight-style kate –highlight-style monochrome –highlight-style espresso –highlight-style haddock –highlight-style tango –highlight-style zenburn 自定义样式这里着重分析下 reveal.js ；为什么？因为只有它有提示板。 安装reveal.js1$ git clone https://github.com/hakimel/reveal.js 生成幻灯片 Html1$ pandoc [*.md] -o [*.html] -t revealjs -s [-V theme=beige] 支持的样式： default：（默认）深灰色背景，白色文字 beige：米色背景，深色文字 sky：天蓝色背景，白色细文字 night：黑色背景，白色粗文字 serif：浅色背景，灰色衬线文字 simple：白色背景，黑色文字 solarized：奶油色背景，深青色文字 提示板按 s 触发； 增加小抄： 123456&lt;aside class=\"notes\"&gt; * 这里是提示1 * 这里是提示2&lt;/aside&gt; 参考资料 Markdown+Pandoc→HTML幻灯片速成","categories":[],"tags":[{"name":"pandoc","slug":"pandoc","permalink":"http://www.helongfei.com/tags/pandoc/"}]},{"title":"Pandoc 如何自定义样式","slug":"2016/pandoc-ru-he-zi-ding-yi-docxyang-shi","date":"2016-01-04T14:38:32.000Z","updated":"2017-11-05T12:44:05.209Z","comments":true,"path":"2016/pandoc-ru-he-zi-ding-yi-docxyang-shi/","link":"","permalink":"http://www.helongfei.com/2016/pandoc-ru-he-zi-ding-yi-docxyang-shi/","excerpt":"","text":"Pandocpandoc 是一个 markdown 文档转换工具，可以把 markdown 转换为诸多的格式，可以定制格式，编写过滤器等。pandoc 支持的格式，可以参考官网：http://www.pandoc.org pandoc 的语法，请看：官网英文 / 中文翻译 pandoc 过滤器编写，请看：https://github.com/jgm/pandoc/wiki/Pandoc-Filters 如何自定义样式Html 样式Html 可以指定 css 文件进行样式修改 方式一：引入 css 文件 1234table&#123;border-collapse:collapse;border:1px solid #CCC;background:#efefef;&#125;table caption&#123;text-align:left; background-color:#fff; line-height:2em; font-size:14px; font-weight:bold; &#125;table th&#123;text-align:left; font-weight:bold;height:26px; line-height:26px; font-size:12px; border:1px solid #CCC;&#125;table td&#123;height:20px; font-size:12px; border:1px solid #CCC;background-color:#fff;&#125; 1$ pandoc -s -c [cssfile] [mdfile] -o [htmlname] 方式二：页面内置样式（写入 header） 123456&lt;style type=\"text/css\"&gt;table&#123;border-collapse:collapse;border:1px solid #CCC;background:#efefef;&#125;table caption&#123;text-align:left; background-color:#fff; line-height:2em; font-size:14px; font-weight:bold; &#125;table th&#123;text-align:left; font-weight:bold;height:26px; line-height:26px; font-size:12px; border:1px solid #CCC;&#125;table td&#123;height:20px; font-size:12px; border:1px solid #CCC;background-color:#fff;&#125;&lt;/style&gt; 1$ pandoc -s -H [cssfile] [mdfile] -o [htmlname] Docx 样式pandoc 可以使用 docx 模板进行渲染（注意：模板是修改样式，而不是内容） 可以把自己修改后的样式保存为「word 模板」 1$ pandoc --reference-docx=[模板路径] [mdfile] -o [docxname] Docx 模板分享自己的 docx 模板（不断更新中） 技术文档docx模板 TeX 模板见 Phodal Huang 毕业设计模板 (百度盘备份) 使用方法：需要保存为*.docx 文件，然后使用 --template 选项指定模板","categories":[],"tags":[{"name":"pandoc","slug":"pandoc","permalink":"http://www.helongfei.com/tags/pandoc/"}]},{"title":"PHP 通过 Stomp 协议和 ActiveMQ 通信","slug":"2015/php-he-activemq-tong-guo-stomp-tongxin","date":"2015-11-25T16:32:26.000Z","updated":"2017-11-05T12:44:05.208Z","comments":true,"path":"2015/php-he-activemq-tong-guo-stomp-tongxin/","link":"","permalink":"http://www.helongfei.com/2015/php-he-activemq-tong-guo-stomp-tongxin/","excerpt":"","text":"什么是 activeMQ？一个开源消息队列,使用 java 开发,属于 apache 基金会.官方网站:http://activemq.apache.org官方文档:http://activemq.apache.org/getting-started.html php 如何和 activeMQ 通信？采用 stomp 协议php 安装 stomp 的扩展1pecl install stomp 采用第三方的类库:https://github.com/dejanb/stomp-php php 如何监控 activeMQ 中队列的状态？activeMQ 需要打开StatisticsPlugin方法:http://activemq.apache.org/statisticsplugin.html 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556/** * 获取指定队列的待处理消息数量 * * @param string $queue 待查询的队列名 * * @return mixed 成功返回待处理的消息数量 */function getMQStatus($queue)&#123; $result = $num = FALSE; $statusqueue = \"/queue/ActiveMQ.Statistics.Destination.&#123;$queue&#125;\";//固定格式 //$statusqueue = \"/queue/ActiveMQ/Statistics/Destination/&#123;$queue&#125;\";//固定格式 //开启ActiveMQ $link = stomp_connect('tcp://192.168.221.129:6161');//broker 的地址 if (!$link) &#123; die(\"Can't connect MQ !!\"); &#125; if (FALSE !== $link) &#123; //查询之后的结果存放处 $resultqueue = \"/queue/test_status_&#123;$queue&#125;\"; //设定采用JSON格式 stomp_subscribe($link, $resultqueue, array(\"transformation\" =&gt; \"jms-map-json\")); //送出空字符串 $result = stomp_send($link, $statusqueue, '', array(\"reply-to\" =&gt; $resultqueue)); if (FALSE === $result) &#123; echo \" send error\" . PHP_EOL; &#125; //取得状态 while (stomp_has_frame($link)) &#123; $frame = stomp_read_frame($link); if (FALSE != $frame) &#123; stomp_ack($link, $frame['headers']['message-id']); $obj = json_decode($frame['body'], TRUE);//$obj 包含队列的所有信息 //print_r($obj); //取得目前数量（尚可取得其他状态） foreach ($obj['map']['entry'] as $pitem) &#123; if ('size' == $pitem['string']) &#123; $num = $pitem['long']; break; &#125; &#125; &#125; &#125; stomp_unsubscribe($link, $resultqueue); stomp_close($link); &#125; return $num;&#125;$num = getMQStatus('spider');","categories":[],"tags":[{"name":"php","slug":"php","permalink":"http://www.helongfei.com/tags/php/"},{"name":"activeMQ","slug":"activeMQ","permalink":"http://www.helongfei.com/tags/activeMQ/"}]}]}